using Altinn.Correspondence.API.Models.Enums;
namespace Altinn.Correspondence.API.Models
{
    /// <summary>
    /// Represents a notification template.
    /// </summary>
    public class NotificationTemplateExternalBE
    {
        /// <summary>
        /// Gets or sets a unique id for the notification template.
        /// </summary>
        /// <remarks>
        /// This id is generated by the database.
        /// </remarks>
        public int NotificationTemplateID { get; set; }

        /// <summary>
        /// Gets or sets the id of the type of notification this represents.
        /// </summary>
        public int NotificationTypeId { get; set; }

        /// <summary>
        /// Gets or sets the sender of the notification. This will set the "from" in SMS and email notifications.
        /// </summary>
        public string FromAddress { get; set; }

        /// <summary>
        /// Gets or sets the subject of the notification.
        /// </summary>
        public string Subject { get; set; }

        /// <summary>
        /// Gets or sets the text body of a notification.
        /// </summary>
        public string NotificationText { get; set; }

        /// <summary>
        /// Gets or sets the type of transport this template is made for. Email or SMS.
        /// </summary>
        public TransportTypeExternalV2 TransportId { get; set; }

        /// <summary>
        /// Gets or sets the language in the notification.
        /// </summary>
        public LanguageTypeExternal LanguageTypeID { get; set; }
    }

    /// <summary>
    /// Represents a strongly typed list of NotificationTemplate elements that can be accessed by index.
    /// </summary>
    public class NotificationTemplateExternalBEList : List<NotificationTemplateExternalBE>
    {
        /// <summary>
        /// Gets or sets a value indicating whether the query returned more rows than specified as the maximum number of rows.
        /// The user should narrow the search.
        /// </summary>
        public bool LimitReached { get; set; }
    }
}